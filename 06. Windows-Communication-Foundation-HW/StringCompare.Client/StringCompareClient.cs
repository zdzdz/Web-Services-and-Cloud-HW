
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IStringCompare")]
public interface IStringCompare
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStringCompare/Contains", ReplyAction = "http://tempuri.org/IStringCompare/ContainsResponse")]
    int Contains(string firstString, string secondString);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IStringCompare/Contains", ReplyAction = "http://tempuri.org/IStringCompare/ContainsResponse")]
    System.Threading.Tasks.Task<int> ContainsAsync(string firstString, string secondString);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IStringCompareChannel : IStringCompare, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class StringCompareClient : System.ServiceModel.ClientBase<IStringCompare>, IStringCompare
{

    public StringCompareClient()
    {
    }

    public StringCompareClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public StringCompareClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public StringCompareClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public StringCompareClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public int Contains(string firstString, string secondString)
    {
        return base.Channel.Contains(firstString, secondString);
    }

    public System.Threading.Tasks.Task<int> ContainsAsync(string firstString, string secondString)
    {
        return base.Channel.ContainsAsync(firstString, secondString);
    }
}


